//simple autogenerated gui for chuck

try{
    chuckEditor.setValue(localStorage.getItem("code"))
    chuckEditor.gotoLine(0, 0, true)
    chuckEditor.clearSelection()
    } catch (exceptionVar) {

    }

function setUI()
{
    let buttons = []
    let vsliders = []
    let hsliders = []

    let code = chuckEditor.getValue()
    let lines = code.split("\n")
    for(var i = 0; i < lines.length; i++){
        var temp = lines[i].split(" ")
        for(var j = 0; j < temp.length; j++){
            if(temp[j] === "global"){
                if(temp[j+1] === "int"){
                    hsliders.push(temp[j+2].replace(';',''))
                }
                if(temp[j+1] === "float"){
                    vsliders.push(temp[j+2].replace(';',''))
                }
                if(temp[j+1] === "Event"){
                    buttons.push(temp[j+2].replace(';',''))
                }
            }
        }
    }

    var Panel

    try{
        Panel = document.getElementById("panel")
    } catch (exceptionVar) {

    }

    let declaring = ""

    for(var i = 0; i < vsliders.length; i++){
        declaring += "let "+vsliders[i]+" = 0;\n"
    }

    for(var i = 0; i < hsliders.length; i++){
        declaring += "let "+hsliders[i]+" = 0;\n"
    }

    let p5header = "//This code as autogenerated by webChuckUI\n"
    declaring += `document.addEventListener("touchmove", (e) => {}, { passive: false });

let canvas

function setup() {
	cnv = createCanvas(${Panel.offsetWidth}, ${Panel.offsetHeight})
	//cnv.position(${Panel.getBoundingClientRect().left},${Panel.getBoundingClientRect().top})
	cnv.id("p5")
	cnv.parent("panel")
}
function windowResized() {
    resizeCanvas(${Panel.offsetWidth}, ${Panel.offsetHeight})
	//cnv.position(${Panel.getBoundingClientRect().left},${Panel.getBoundingClientRect().top})
}
function draw() {
background(255);
fill(0);
textSize(6);
`
    for(var i = 0; i < vsliders.length; i++){
        declaring += "fill(0);\n"
        declaring += 'text("'+vsliders[i].slice(0, 8)+'",'+((35*i)+(hsliders[i] ? 240 : 20))+",80);\n"
        declaring += vsliders[i] + " = vslider(" + vsliders[i]+","+((35*i)+(hsliders[i] ? 250 : 30))+",90,200,0,1);\n"
    }
    for(var i = 0; i < hsliders.length; i++){
        declaring += "fill(0);\n"
        declaring += 'text("'+hsliders[i].slice(0, 8)+'",20,'+((35*i)+85)+");\n"
        declaring += hsliders[i] + " = slider(" + hsliders[i]+",20,"+((35*i)+90)+",200,0,100);\n"
    }
    for(var i = 0; i < buttons.length; i++){
        declaring += "fill(0);\n"
        declaring += 'text("'+buttons[i].slice(0, 8)+'",'+ ((i*60)+10) + ",10)\n"
        declaring += "fill(255);\n"
        declaring += "if(button(" + ((i*60)+10) + ",10,50,50)){"+"theChuck.broadcastEvent("+'"'+buttons[i]+'")}\n'
    }

    declaring += "uiupd();\n"
    declaring += `if(mouseIsPressed) {\n`
    declaring += 'if(theChuck){\n'
    for(var i = 0; i < vsliders.length; i++){
        declaring += 'theChuck.setFloat("'+vsliders[i]+'",'+vsliders[i]+")\n"
    }
    for(var i = 0; i < hsliders.length; i++){
        declaring += 'theChuck.setInt("'+hsliders[i]+'",int('+hsliders[i]+"))\n"
    }
    declaring += '}\n}\n}'

    var script = p5header + declaring
    //console.log(script)
    return script
    }

function UI(){
    localStorage.setItem("code", chuckEditor.getValue())
    window.location.reload(true)
}
eval(setUI())

let graphicStatus = 2

function drawing(s){
    var console = document.getElementById("console")
    var visCanvas = document.getElementById("canvas")
    var p5can = document.getElementById("p5")
    graphicStatus = s
    switch(graphicStatus){
        case 0:
            console.style.display = 'none'
            visCanvas.style.display = 'none'
            p5can.style.display = 'block'
        break;
        case 1:
            console.style.display = 'none'
            p5can.style.display = 'none'
            visCanvas.style.display = 'block'
        break;
        case 2:
            visCanvas.style.display = 'none'
            p5can.style.display = 'none'
            console.style.display = 'block'
        break;
    }
}

